/* 
üìú 2623. Memoize \\ https://leetcode.com/problems/memoize/?envType=study-plan-v2&envId=30-days-of-javascript

  –î–∞–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è fn, –≤–µ—Ä–Ω–∏—Ç–µ –µ—ë –º–µ–º–æ–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é.

  –ú–µ–º–æ–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è ‚Äî —ç—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –±—É–¥–µ—Ç –≤—ã–∑–≤–∞–Ω–∞ –¥–≤–∞–∂–¥—ã —Å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º–∏ –≤—Ö–æ–¥–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏. –í–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ –æ–Ω–∞ –≤–µ—Ä–Ω–µ—Ç –∫–µ—à–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.

  –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–µ–¥–ø–æ–ª–æ–∂–∏—Ç—å, —á—Ç–æ –µ—Å—Ç—å 3 –≤–æ–∑–º–æ–∂–Ω—ã–µ –≤—Ö–æ–¥–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏: sum, fib –∏ factorial.

  sum –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–≤–∞ —Ü–µ–ª—ã—Ö —á–∏—Å–ª–∞ a –∏ b –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç a + b. –ü—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º, —á—Ç–æ –µ—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ —É–∂–µ –±—ã–ª–æ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–æ –¥–ª—è –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ (b, a), –≥–¥–µ a != b, –æ–Ω–æ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ –¥–ª—è –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ (a, b). –ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ –∞—Ä–≥—É–º–µ–Ω—Ç—ã (3, 2) –∏ (2, 3), –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Å–¥–µ–ª–∞–Ω–æ –¥–≤–∞ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –≤—ã–∑–æ–≤–∞.
  fib –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ–¥–Ω–æ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ n –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 1, –µ—Å–ª–∏ n <= 1, –∏–ª–∏ fib(n - 1) + fib(n - 2) –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ.
  factorial –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ–¥–Ω–æ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ n –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 1, –µ—Å–ª–∏ n <= 1, –∏–ª–∏ factorial(n - 1) * n –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ.
*/

function memoize(fn) {
  /* –ö—ç—à –±—É–¥–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –≤ –ú–∞–ø–µ, –ø–æ—Ç–æ–º—É –æ–Ω–∏ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω—ã –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞ –ø–æ –∫–ª—é—á–∞–º. –° –æ–±—ä–µ–∫—Ç–æ–º —Ç—É—Ç —Ç–æ–∂–µ –º–æ–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å. –î–æ—Å—Ç—É–ø –∫ –Ω–µ–º—É –∏–∑ –∑–∞–º—ã–∫–∞–Ω–∏—è*/
  const cache = new Map();

  return function (...args) {
    /*–ö–ª—é—á–æ–º –≤ –º–∞–ø–µ –±—É–¥–µ—Ç –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–π –∫ —Å—Ç—Ä–æ–∫–µ –º–∞—Å—Å–∏–≤ –∑–Ω–∞—á–µ–Ω–∏–π, —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º –º—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º —á—Ç–æ –∫–ª—é—á–∏ –±—É–¥—É—Ç —Å—Ä–∞–≤–Ω–∏–≤–∞—Ç—å—Å—è –ø–æ –∑–Ω–∞—á–µ–Ω–∏—è, –∞ –Ω–µ –ø–æ —Å—Å—ã–ª–∫–µ.*/
    const key = JSON.stringify(args);

    /* –ú—ã –ø—Ä–æ–≤–µ—Ä—è–µ–º –º–∞–ø—É (–∫—ç—à) –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –¥–∞–Ω–Ω–æ–≥–æ –∫–ª—é—á–∞ (–º–∞—Å—Å–∏–≤–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤) */
    const isCached = cache.has(key);

    /* –ï—Å–ª–∏ –∫—ç—à–∏—Ä–æ–≤–∞–Ω, –ø–æ–∑–≤—Ä–∞—â–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ –∫–ª—é—á—É –≤ –º–∞–ø–µ */
    if (isCached) return cache.get(key);

    /* –ï—Å–ª–∏ –Ω–µ—Ç, —Ç–æ –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é, —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç */
    const result = fn(...args);

    /* –î–∞–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –º–∞–ø—É –ø–æ –ø–∞—Ä–µ –∫–ª—é—á (–º–∞—Å—Å–∏–≤ —Å –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏): –∑–Ω–∞—á–µ–Ω–∏–µ (—Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏) */
    cache.set(key, result);

    /* –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç */
    return result;
  };
}

/* –ü—Ä–æ–≤–µ—Ä–∫–∞ */

let callCount = 0;
const memoizedFn = memoize(function (a, b) {
  callCount += 1;
  return a + b;
});
memoizedFn(2, 3); // 5
memoizedFn(2, 3); // 5
console.log(callCount); // 1